# -*- coding: utf-8 -*-
"""label_app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ASPDBvRcDFB4If_mbzVnvgG0rX1hLDok
"""

import streamlit as st
import pandas as pd

st.set_page_config(page_title="야구 댓글 라벨링 도구", layout="centered")
st.title("⚾ 야구 댓글 감정 라벨링 도구 ")

# 파일 업로드 or 이어서 불러오기
mode = st.radio("라벨링 모드 선택", ["새로 시작", "이전 파일 이어하기"])

uploaded_file = st.file_uploader("CSV 파일 업로드", type="csv")

# 세션에 df 초기화
if uploaded_file:
    if 'df' not in st.session_state:
        df = pd.read_csv(uploaded_file)
        if 'label' not in df.columns:
            df['label'] = None
        st.session_state.df = df
        st.session_state.current_idx = 0
    else:
        df = st.session_state.df

    # 진행 중 라벨링 안 된 인덱스 목록
    unlabeled = df[df['label'].isna()]
    remaining_indices = unlabeled.index.tolist()

    # 라벨링된 것만 보기 옵션
    if st.checkbox("✅ 라벨링된 댓글만 보기"):
        preview_df = df[df['label'].notna()][['clean_text', 'label']].copy()
        preview_df['label'] = preview_df['label'].map({1: "긍정", 0: "부정"})
        st.dataframe(preview_df)
    else:
        if remaining_indices:
            idx = st.session_state.current_idx
            if idx not in remaining_indices:
                idx = remaining_indices[0]
                st.session_state.current_idx = idx

            st.markdown(f"**{idx+1} / {len(df)} 번째 댓글**")
            text = df.iloc[idx]['clean_text'] if pd.notna(df.iloc[idx]['clean_text']) else df.iloc[idx]['comment']
            st.text_area("📝 댓글 내용", text, height=100)

            # 버튼 2개
            col1, col2 = st.columns(2)
            if col1.button("👍 긍정", key=f"pos_{idx}"):
                df.at[idx, 'label'] = 1
                next_idx = next((i for i in remaining_indices if i > idx), None)
                st.session_state.current_idx = next_idx if next_idx is not None else idx
            if col2.button("👎 부정", key=f"neg_{idx}"):
                df.at[idx, 'label'] = 0
                next_idx = next((i for i in remaining_indices if i > idx), None)
                st.session_state.current_idx = next_idx if next_idx is not None else idx
        else:
            st.success("🎉 모든 댓글 라벨링 완료!")

    # 진행률 바
    progress = df['label'].notna().mean()
    st.progress(progress)

    # 파일명 입력받기 + 저장 버튼
    file_name = st.text_input("저장 파일 이름 (예: labeled_output.csv)", value="labeled_output.csv")

    if st.button("💾 저장"):
        df.to_csv(file_name, index=False, encoding='utf-8-sig')
        st.success(f"✅ {file_name} 저장 완료!")